{"version":3,"sources":["config/api.js","constants/actionTypes/Auth.js","actions/Auth.js","components/AppLayout/index.jsx","config/fetcher.js","constants/actionTypes/Dashboard.js","actions/Dashboard.js","pages/Dashboard/components/AddBoardForm/index.jsx","pages/Dashboard/components/AddBoardModal/index.jsx","pages/Dashboard/components/AddNewBoard/index.jsx","pages/Dashboard/components/BoardColumn/index.jsx","pages/Dashboard/components/BoardItemInfo/index.jsx","pages/Dashboard/components/BoardItem/index.jsx","hocs/withLoading.jsx","pages/Dashboard/mains/BoardList/index.jsx","pages/Dashboard/mains/DashboardHeading/index.jsx","pages/Dashboard/index.jsx","pages/Page404/index.jsx","reducers/Dashboard.js","constants/actionTypes/Profile.js","reducers/Auth.js","constants/actionTypes/BoardDetail.js","reducers/BoardDetail.js","reducers/index.js","store/index.js","actions/BoardDetail.js","constants/dataTypes/ColumnTypes.js","pages/BoardDetail/components/Item/index.jsx","pages/BoardDetail/components/BoardSingleColumns/index.jsx","pages/BoardDetail/mains/BoardColumns/index.jsx","pages/BoardDetail/mains/BoardName/index.jsx","pages/BoardDetail/index.jsx","pages/Login/index.jsx","pages/Registry/index.jsx","actions/Profile.js","pages/Profile/mains/UpdatePassword/index.jsx","pages/Profile/mains/UpdateProfile/index.jsx","pages/Profile/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["console","log","process","require","config","api","AUTH_ACTION_TYPES","setLoadingLogin","isLoading","type","payload","setLoadingSignup","logout","cb","dispatch","localStorage","removeItem","AppLayout","children","name","useSelector","state","auth","useDispatch","push","useHistory","className","Header","to","theme","mode","trigger","overlay","Item","onClick","style","cursor","Content","fetcher","axios","create","interceptors","request","use","a","getItem","token","headers","Authorization","baseURL","error","Promise","reject","response","resolve","status","message","DASHBOARD_ACTION_TYPES","setLoadingAddBoard","setLoadingGetBoard","AddBoardForm","form","layout","onFinish","values","value","post","then","res","data","code","finally","required","label","rules","size","placeholder","TextArea","rows","AddBoardModal","visible","hide","Form","useForm","isLoadingAdd","dashboard","onClose","onCancel","title","footer","submit","loading","AddNewBoard","useState","setVisible","PlusCircleFilled","BoardColumn","col1","col2","col3","total","color","percent","strokeColor","showInfo","BoardItemInfo","item","createdBy","updatedBy","moment","Date","updatedAt","fromNow","BoardItem","board","actions","key","ShareAltOutlined","url","document","location","href","id","navigator","clipboard","writeText","success","placement","EllipsisOutlined","extra","ClockCircleOutlined","createdAt","Meta","description","items","withLoading","Component","align","justify","height","indicator","LoadingOutlined","BoardList","isLoadingGet","useEffect","get","map","DashboardHeading","Dashboard","Page404","subTitle","initialState","realtime","PROFILE_ACTION_TYPES","isLoadingLogin","isLoadingGetUser","jwt","password","getUser","BOARD_DETAIL_ACTION_TYPES","1","2","3","combineReducers","action","detail","column","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setLoadingGetDetail","setLoadingAddItem","WENT_WELL","TO_IMPROVE","ACTION_ITEMS","isEdit","setIsEdit","setName","onChange","e","target","onBlur","itemId","put","editItem","backgroundColor","onDoubleClick","BoardSingleColumn","boardId","hideEdit","ColumnTypes","addItem","danger","BoardColumns","Object","index","isNaN","BoardName","setValue","editBoard","BoardDetail","useParams","getDetail","Login","username","Axios","setItem","login","prefix","UserOutlined","Password","LockOutlined","block","htmlType","Registry","history","isLoadingSignup","registry","SmileOutlined","setLoadingEditUser","setLoadingEditPassword","UpdatePassword","user","initialValues","setTimeout","editPassword","UpdateProfile","editUser","disabled","Profile","App","basename","exact","path","component","RetroDetail","Boolean","window","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"qhBAAAA,QAAQC,IAAIC,wLACZC,EAAQ,KAAUC,SACX,IAAMC,EAAMH,gDCFNI,EACL,QADKA,EAEO,oBAFPA,EAGJ,SAHIA,EAIQ,qBAJRA,EAKU,uBALVA,EAMF,WCDEC,EAAkB,SAACC,GAAD,MAAgB,CAC9CC,KAAMH,EACNI,QAASF,IAEGG,EAAmB,SAACH,GAAD,MAAgB,CAC/CC,KAAMH,EACNI,QAASF,IAmCGI,EAAS,SAACC,GAAD,OAAQ,SAACC,GAC9BC,aAAaC,WAAW,SACxBF,EAAS,CACRL,KAAMH,IAEHO,GAAIA,MCJMI,EArCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtCH,KACFL,EAAWS,cACTC,EAASC,cAATD,KAER,OACC,kBAAC,IAAD,CAAQE,UAAU,sBACjB,kBAAC,IAAOC,OAAR,CAAeD,UAAU,cACxB,kBAAC,IAAD,CAAME,GAAG,KACR,wBAAIF,UAAU,aAAd,cAED,kBAAC,IAAD,CAAMG,MAAM,OAAOC,KAAK,cACtBX,EACA,kBAAC,IAAD,CACCY,QAAQ,QACRC,QACC,kBAAC,IAAD,KACC,kBAAC,IAAKC,KAAN,KACC,kBAAC,IAAD,CAAML,GAAG,YAAT,YAED,kBAAC,IAAKK,KAAN,CAAWC,QAAS,kBAAMpB,EAASF,IAAUY,EAAK,aAAlD,aAMF,0BAAMW,MAAO,CAAEC,OAAQ,YAAcjB,IAGtC,kBAAC,IAAD,CAAMS,GAAG,UAAT,WAIH,kBAAC,IAAOS,QAAR,CAAgBX,UAAU,eAAeR,K,iGCxCtCoB,EAAUC,IAAMC,SAEtBF,EAAQG,aAAaC,QAAQC,IAA7B,uCACC,WAAOvC,GAAP,eAAAwC,EAAA,sEACqB7B,aAAa8B,QAAQ,SAD1C,cACOC,EADP,OAEC1C,EAAO2C,QAAU,CAChBC,cAAc,UAAD,OAAYF,IAE1B1C,EAAO6C,QAAU5C,EALlB,kBAMQD,GANR,2CADD,uDASC,SAAC8C,GAAD,OAAWC,QAAQC,OAAOF,MAG3BZ,EAAQG,aAAaY,SAASV,KAC7B,SAACU,GAAD,OAAc,IAAIF,SAAQ,SAACG,GAAD,OAAaA,EAAQD,SAC/C,SAACH,GACA,OAAKA,EAAMG,SAKmB,MAA1BH,EAAMG,SAASE,OACX,IAAIJ,SAAQ,SAACG,EAASF,GAC5BI,IAAQN,MAAM,kDACdE,EAAOF,MAE0B,MAA1BA,EAAMG,SAASE,OAChB,IAAIJ,SAAQ,SAACG,EAASF,GAC5BI,IAAQN,MAAM,iBACdE,EAAOF,MAGD,IAAIC,SAAQ,SAACG,EAASF,GAC5BI,IAAQN,MAAM,yBACdE,EAAOF,MAjBD,IAAIC,SAAQ,SAACG,EAASF,GAC5BI,IAAQN,MAAM,kBACdE,EAAOF,SAqBIZ,QC5CFmB,EACK,kBADLA,EAEO,oBAFPA,EAGD,YAHCA,EAID,YAJCA,EAKW,wBCAXC,EAAqB,SAAClD,GAAD,MAAgB,CACjDC,KAAMgD,EACN/C,QAASF,IAEGmD,EAAqB,SAACnD,GAAD,MAAgB,CACjDC,KAAMgD,EACN/C,QAASF,ICgBKoD,EAlBM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB/C,EAAWS,cACjB,OACC,kBAAC,IAAD,CACCG,UAAU,yBACVmC,KAAMA,EACNC,OAAO,WACPC,SAAU,SAACC,GAAD,OAAYlD,GDFAmD,ECEkBD,EDFR,SAAClD,GACnCA,EAAS4C,GAAmB,IAC5BpB,EACE4B,KAAK7D,EAAM,SAAU4D,GACrBE,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAElD1C,EAAS,CACRL,KAAMgD,EACN/C,QAAS2D,OAGXE,SAAQ,kBAAMzD,EAAS4C,GAAmB,UAbrB,IAACO,ICItB,kBAAC,IAAKhC,KAAN,CAAWuC,UAAQ,EAACC,MAAM,OAAOtD,KAAK,OAAOuD,MAAO,CAAC,CAAEF,UAAU,KAChE,kBAAC,IAAD,CAAOG,KAAK,QAAQC,YAAY,UAEjC,kBAAC,IAAK3C,KAAN,CAAWd,KAAK,cAAcsD,MAAM,eACnC,kBAAC,IAAMI,SAAP,CAAgBF,KAAK,QAAQG,KAAM,OCkBxBC,EA9BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAAW,EAC7BC,IAAKC,UAAbtB,EADqC,oBAEpCuB,EAAiBhE,aAAY,SAACC,GAAD,OAAWA,EAAMgE,aAA9CD,aACR,OACC,kBAAC,IAAD,CACC1D,UAAU,0BACV4D,QAASL,EACTD,QAASA,EACTO,SAAUN,EACVO,MAAM,gBACNC,OACC,oCACC,kBAAC,IAAD,CAAQvD,QAAS+C,GAAjB,UACA,kBAAC,IAAD,CACCxE,KAAK,UACLyB,QAAS,WACR2B,EAAK6B,SACLT,KAEDU,QAASP,GANV,SAaF,kBAAC,EAAD,CAAcvB,KAAMA,MCXR+B,EAhBK,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBb,EADkB,KACTc,EADS,KAEzB,OACC,oCACC,kBAAC,IAAD,CACC5D,QAAS,kBAAM4D,GAAW,IAC1BpE,UAAU,wBACVjB,KAAK,SAEL,kBAACsF,EAAA,EAAD,MALD,aAQA,kBAAC,EAAD,CAAef,QAASA,EAASC,KAAM,kBAAMa,GAAW,Q,0FCqB5CE,I,OAlCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAArB,OACnB,yBAAK1E,UAAU,wBACd,yBAAKA,UAAU,eACd,kBAAC,KAAD,CAAK2E,MAAM,WAAX,aACA,kBAAC,IAAD,CAASb,MAAOS,GACf,kBAAC,KAAD,CACCK,QAAUL,EAAOG,EAAS,IAC1BG,YAAY,UACZC,UAAU,MAIb,yBAAK9E,UAAU,eACd,kBAAC,KAAD,CAAK2E,MAAM,WAAX,cACA,kBAAC,IAAD,CAASb,MAAOU,GACf,kBAAC,KAAD,CACCI,QAAUJ,EAAOE,EAAS,IAC1BG,YAAY,UACZC,UAAU,MAIb,yBAAK9E,UAAU,eACd,kBAAC,KAAD,CAAK2E,MAAM,QAAX,gBACA,kBAAC,IAAD,CAASb,MAAOW,GACf,kBAAC,KAAD,CACCG,QAAUH,EAAOC,EAAS,IAC1BG,YAAY,OACZC,UAAU,SCrBAC,I,OATO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrB,yBAAKhF,UAAU,2BACd,0CAAgBgF,EAAKC,WACrB,2CACeD,EAAKE,UADpB,KACiC,IAC/BC,IAAO,IAAIC,KAAKJ,EAAKK,YAAYC,cCuCtBC,GAlCG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjB,kBAAC,IAAD,CACCvC,KAAK,QACLjD,UAAU,qBACVyF,QAAS,CACR,kBAAC,IAAD,CAASC,IAAI,QAAQ5B,MAAM,aAC1B,kBAAC6B,EAAA,EAAD,CACCnF,QAAS,WACR,IAAMoF,EAAMC,SAASC,SAASC,KAAO,SAAWP,EAAMQ,GACtDC,UAAUC,UAAUC,UAAUP,GAC9B9D,IAAQsE,QAAQ,kBAInB,kBAAC,IAAD,CACCV,IAAI,OACJ5B,MAAO,kBAAC,GAAD,CAAekB,KAAMQ,IAC5Ba,UAAU,UAEV,kBAACC,EAAA,EAAD,QAGFxC,MAAO,kBAAC,IAAD,CAAM5D,GAAE,iBAAYsF,EAAMQ,KAAOR,EAAM/F,MAC9C8G,MACC,oCACC,kBAACC,EAAA,EAAD,MADD,IAC0BrB,IAAO,IAAIC,KAAKI,EAAMiB,YAAYnB,YAI7D,kBAAC,IAAKoB,KAAN,CAAWC,YAAanB,EAAMmB,cAC9B,kBAAC,GAAD,eAAsBnB,EAAMoB,U,+CC1BfC,GAhBK,SAAC/H,EAAW4G,GAAZ,OAAoB,SAACoB,GAAD,OACvChI,EACC,kBAAC,KAAD,CACCiI,MAAM,SACNC,QAAQ,SACRvG,MAAO,CAAEwG,OAAQ,QACjBjH,UAAU,mBAEV,kBAAC,KAAD,KACC,kBAAC,KAAD,CAAM0F,IAAKA,EAAKzC,KAAK,QAAQiE,UAAW,kBAACC,GAAA,EAAD,UAI1CL,ICeaM,GAnBG,WAOjB,IAAMhI,EAAWS,cAPM,EAQQH,aAAY,SAACC,GAAD,OAAWA,EAAMgE,aAApD0D,EARe,EAQfA,aAAc1E,EARC,EAQDA,KAEtB,OADA2E,qBAAU,kBAAMlI,GRQa,SAACA,GAC9BA,EAAS6C,GAAmB,IAC5BrB,EACE2G,IAAI5I,EAAM,UACV8D,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAC1Ca,GACRvD,EAAS,CACRL,KAAMgD,EACN/C,QAAS2D,OAGXE,SAAQ,kBAAMzD,EAAS6C,GAAmB,YQrBN,CAAC7C,IAChCyH,GAAYQ,EAAZR,CACN,yBAAK7G,UAAU,sBACd,kBAAC,EAAD,MACC2C,EAAK6E,KAAI,SAACxC,GAAD,OACT,kBAAC,GAAD,CAAWU,IAAKV,EAAKgB,GAAIR,MAAOR,UCbrByC,I,OARU,kBACxB,yBAAKzH,UAAU,6BACd,yBAAKA,UAAU,SACd,6CCYY0H,GAZG,WAEjB,OADiBhI,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtCH,KAEP,yBAAKO,UAAU,qBACd,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGD,kBAAC,IAAD,CAAUE,GAAG,Y,UCEAyH,GAZC,kBACf,kBAAC,KAAD,CACC9F,OAAO,MACPiC,MAAM,MACN8D,SAAS,8CACTrB,MACC,kBAAC,IAAD,CAAMrG,GAAG,KACR,kBAAC,IAAD,CAAQnB,KAAK,WAAb,iB,uCCbE8I,GAAe,CACpBlF,KAAM,GACN0E,cAAc,EACd3D,cAAc,EACdoE,UAAU,G,UCLEC,GACgB,6BADhBA,GAEI,iBAFJA,GAGiB,8B,UCWxBF,GAAY,aACjBG,gBAAgB,EAChBC,kBAAkB,GAbH,WACf,IAAM7G,EAAQ/B,aAAa8B,QAAQ,SACnC,GAAIC,EACH,IAAK,IAAD,EAC2B8G,aAAI9G,GAD/B,EACK+G,SACR,OAFG,6BAGF,SACD,QAOCC,I,SCjBSC,GACY,yBADZA,GAEA,aAFAA,GAGU,uBAHVA,GAIF,WAJEA,GAKD,YALCA,GAMA,aCLPR,GAAe,CACpBlF,KAAM,CACLiE,MAAO,CACN0B,EAAG,GACHC,EAAG,GACHC,EAAG,KAGL1J,WAAW,GCJG2J,8BAAgB,CAC9B9E,ULEc,WAAmC,IAAlChE,EAAiC,uDAAzBkI,GAAca,EAAW,uCAChD,OAAQA,EAAO3J,MACd,KAAKgD,EACJ,OAAO,2BACHpC,GADJ,IAEC+D,aAAcgF,EAAO1J,UAEvB,KAAK+C,EACJ,OAAO,2BACHpC,GADJ,IAEC0H,aAAcqB,EAAO1J,UAEvB,KAAK+C,EACJ,OAAO,2BACHpC,GADJ,IAECmI,UAAWnI,EAAMmI,WAEnB,KAAK/F,EACJ,OAAO,2BACHpC,GADJ,IAECgD,KAAM+F,EAAO1J,UAEf,KAAK+C,EACJ,OAAO,2BACHpC,GADJ,IAECgD,KAAK,CAAE+F,EAAO1J,SAAV,oBAAsBW,EAAMgD,SAElC,QACC,OAAOhD,IK7BTgJ,ODKc,WAAmC,IAAlChJ,EAAiC,uDAAzBkI,GAAca,EAAW,uCAChD,OAAQA,EAAO3J,MACd,KAAKsJ,GACJ,OAAO,2BACH1I,GADJ,IAECb,UAAW4J,EAAO1J,UAEpB,KAAKqJ,GACJ,OAAO,2BACH1I,GADJ,IAECgD,KAAM+F,EAAO1J,UAEf,KAAKqJ,GACJ,OAAO,2BACH1I,GADJ,IAECgD,KAAK,2BACDhD,EAAMgD,MADN,IAEHiE,MAAM,2BACFjH,EAAMgD,KAAKiE,OADV,mBAEH8B,EAAO1J,QAAQ4J,OAFZ,uBAGAjJ,EAAMgD,KAAKiE,MAAM8B,EAAO1J,QAAQ4J,SAHhC,CAIHF,EAAO1J,gBAKZ,KAAKqJ,GACJ,OAAO,2BACH1I,GADJ,IAECgD,KAAK,2BACDhD,EAAMgD,MADN,IAEHiE,MAAM,2BACFjH,EAAMgD,KAAKiE,OADV,mBAEH8B,EAAO1J,QAAQ4J,OAASjJ,EAAMgD,KAAKiE,MACnC8B,EAAO1J,QAAQ4J,QACdpB,KAAI,SAACxC,GAAD,OACLA,EAAKgB,KAAO0C,EAAO1J,QAAQgH,GAAK0C,EAAO1J,QAAUgG,WAKtD,KAAKqD,GACJ,OAAO,2BACH1I,GADJ,IAECgD,KAAK,2BACDhD,EAAMgD,MACN+F,EAAO1J,WAGb,QACC,OAAOW,ICtDTC,KHYc,WAAmC,IAAlCD,EAAiC,uDAAzBkI,GAAca,EAAW,uCAChD,OAAQA,EAAO3J,MACd,KAAKH,EACJ,OAAO,2BACHe,GADJ,IAECqI,eAAgBU,EAAO1J,UAEzB,KAAKJ,EACJ,OAAO,2BACHe,GACA+I,EAAO1J,SAEZ,KAAKJ,EACJ,MAAO,GACR,KAAKA,EACJ,OAAO,aACNqJ,kBAAkB,GACfS,EAAO1J,SAEZ,KAAKJ,EACJ,OAAO,aACNqJ,iBAAkBS,EAAO1J,SACtBW,GAEL,KAAKoI,GACJ,OAAO,2BACHpI,GACA+I,EAAO1J,SAEZ,QACC,OAAOW,MI7CJkJ,GAAa,CAACC,MASLC,GANDC,uBACbC,GAHoB,GAKpBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCP3BO,GAAsB,SAACtK,GAAD,MAAgB,CAClDC,KAAMsJ,GACNrJ,QAASF,IAEGuK,GAAoB,SAACvK,GAAD,MAAgB,CAChDC,KAAMsJ,GACNrJ,QAASF,ICVK,IACdwK,UAAW,EACXC,WAAY,EACZC,aAAc,EACdlB,EAAG,YACHC,EAAG,aACHC,EAAG,gBC4BWjI,I,OAxBF,SAAC,GAAc,IADXxB,EACDiG,EAAW,EAAXA,KAAW,EACEb,oBAAS,GADX,mBACnBsF,EADmB,KACXC,EADW,OAEFvF,mBAASa,EAAKvF,MAFZ,mBAEnBA,EAFmB,KAEbkK,EAFa,KAGpBvK,EAAWS,cAEjB,OAAO4J,EACN,kBAAC,IAAMtG,SAAP,CACCZ,MAAO9C,EACPmK,SAAU,SAACC,GAAD,OAAOF,EAAQE,EAAEC,OAAOvH,QAClCwH,OAAQ,kBACPtK,IAASuF,EAAKvF,MACdL,EFyBoB,SAAC4K,EAAQvK,EAAMN,GAAf,OAAsB,SAACC,GAC9CwB,EAAQqJ,IAAI,SAAWD,EAAQ,CAAEvK,SAAQgD,MAAK,SAACC,GAAS,IAAD,EAC9BA,EAAIC,KAApBA,EAD8C,EAC9CA,KAAMnB,EADwC,EACxCA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAElD1C,EAAS,CACRL,KAAMsJ,GACNrJ,QAAS2D,IAEXxD,QElCW+K,CAASlF,EAAKgB,GAAIvG,GAAM,kBAAMiK,GAAU,UAInD,yBACC1J,UAAU,eACVS,MAAO,CAAE0J,iBAlBKpL,EAkBoBiG,EAAK4D,OAlBN,IAAT7J,EAAa,QAAmB,IAATA,EAAa,MAAQ,SAmBpEqL,cAAe,kBAAMV,GAAU,KAE9B1E,EAAKvF,QCyBM4K,I,OA5CW,SAAC,GAA8B,IAA5BtL,EAA2B,EAA3BA,KAAM6H,EAAqB,EAArBA,MAAO0D,EAAc,EAAdA,QAAc,EAC3BnG,oBAAS,GADkB,mBAChDsF,EADgD,KACxCC,EADwC,OAE/BvF,mBAAS,IAFsB,mBAEhD1E,EAFgD,KAE1CkK,EAF0C,KAGjDvK,EAAWS,cACX0K,EAAW,WAChBb,GAAU,GACVC,EAAQ,KAET,OACC,yBAAK3J,UAAU,+BACd,wBAAIA,UAAU,SAASwK,GAAYzL,IAClC0K,EACA,oCACC,kBAAC,IAAMtG,SAAP,CACCZ,MAAO9C,EACPmK,SAAU,SAACC,GAAD,OAAOF,EAAQE,EAAEC,OAAOvH,UAEnC,kBAAC,IAAD,CACCvC,UAAU,WACVjB,KAAK,UACLyB,QAAS,kBAAMpB,EHFE,SAACkL,EAAS1B,EAAQnJ,EAAMN,GAAxB,OAA+B,SAACC,GACtDA,EAASiK,IAAkB,IAC3BzI,EACE4B,KAAK,QAAS,CAAE8H,UAAS1B,SAAQnJ,SACjCgD,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAElD1C,EAAS,CACRL,KAAMsJ,GACNrJ,QAAS2D,IAEXxD,OAEA0D,SAAQ,kBAAMzD,EAASiK,IAAkB,QGZdoB,CAAQH,EAASvL,EAAMU,EAAM8K,MAHtD,QAOA,kBAAC,IAAD,CACCvK,UAAU,aACVjB,KAAK,UACL2L,QAAM,EACNlK,QAAS+J,GAJV,WAUD,kBAAC,IAAD,CAAQvK,UAAU,UAAUQ,QAAS,kBAAMkJ,GAAU,KAArD,YAIA9C,EAAMY,KAAI,SAACxC,GAAD,OACV,kBAAC,GAAD,CAAMA,KAAMA,EAAMU,IAAKV,EAAKgB,WC3BjB2E,I,OAfM,SAAC,GAAD,IAAG/D,EAAH,EAAGA,MAAO0D,EAAV,EAAUA,QAAV,OACpB,yBAAKtK,UAAU,yBACb4K,OAAOtI,OAAOkI,IAAahD,KAC3B,SAACqD,GAAD,OACEC,MAAMD,IACN,kBAAC,GAAD,CACCnF,IAAKmF,EACL9L,KAAM8L,EACNjE,MAAOA,EAAMiE,GACbP,QAASA,UCYAS,GArBG,SAAC,GAA4B,IAAD,IAAzBtL,YAAyB,MAAlB,GAAkB,EAAd6K,EAAc,EAAdA,QACzBlL,EAAWS,cAD4B,EAEjBsE,oBAAS,GAFQ,mBAEtCsF,EAFsC,KAE9BC,EAF8B,OAGnBvF,mBAAS1E,GAHU,mBAGtC8C,EAHsC,KAG/ByI,EAH+B,KAI7C,OACC,yBAAKhL,UAAU,sBACbyJ,EACA,kBAAC,IAAD,CACClH,MAAOA,EACPqH,SAAU,SAACC,GAAD,OAAOmB,EAASnB,EAAEC,OAAOvH,QACnCwH,OAAQ,WACP3K,ELwCmB,SAACkL,EAAS7K,GAAV,OAAmB,SAACL,GAC5CwB,EAAQqJ,IAAI,UAAYK,EAAS,CAAE7K,SAAQgD,MAAK,SAACC,GAAS,IAAD,EAChCA,EAAIC,KAApBA,EADgD,EAChDA,KAAMnB,EAD0C,EAC1CA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAElD1C,EAAS,CACRL,KAAMsJ,GACNrJ,QAAS2D,QK/CEsI,CAAUX,EAAS/H,IAC5BmH,GAAU,MAIZ,wBAAIU,cAAe,kBAAMV,GAAU,KAAQjK,KCMhCyL,GAlBK,WAAO,IAClBlF,EAAOmF,cAAPnF,GACF5G,EAAWS,cACjByH,qBAAU,kBAAMlI,ENFQ,SAAC4G,GAAD,OAAQ,SAAC5G,GACjCA,EAASgK,IAAoB,IAC7BxI,EACE2G,IAAI,UAAYvB,GAChBvD,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAElD1C,EAAS,CACRL,KAAMsJ,GACNrJ,QAAS2D,OAGXE,SAAQ,kBAAMzD,EAASgK,IAAoB,QMXpBgC,CAAUpF,MAAM,CAAC5G,EAAU4G,IAH3B,MAIGtG,aAAY,SAACC,GAAD,OAAWA,EAAMgJ,UAAjD7J,EAJiB,EAIjBA,UAAW6D,EAJM,EAINA,KAEnB,OADiBjD,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtCH,KAEPoH,GAAY/H,EAAZ+H,CACC,yBAAK7G,UAAU,wBACd,kBAAC,GAAD,CAAWP,KAAMkD,EAAKlD,KAAM6K,QAAS3H,EAAKqD,KAC1C,kBAAC,GAAD,CAAcY,MAAK,OAAEjE,QAAF,IAAEA,OAAF,EAAEA,EAAMiE,MAAO0D,QAAS3H,EAAKqD,OAIlD,kBAAC,IAAD,CAAU9F,GAAG,Y,oBCQAmL,I,OAvBD,WACb,IAAMjM,EAAWS,cADE,EAEkBH,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA1DoI,EAFW,EAEXA,eACR,OAHmB,EAEKsD,SAEvB,kBAAC,IAAD,CAAUpL,GAAG,MAEb,yBAAKF,UAAU,iBACd,qCACA,kBAAC,IAAD,CAAMoC,OAAO,WAAWC,SAAU,SAACE,GAAD,OAAWnD,E9BD3B,SAACmD,GAAD,OAAW,SAACnD,GAChCA,EAASP,GAAgB,IACzB0M,IAAM/I,KAAK7D,EAAM,SAAU4D,GACzBE,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,UAElD1C,EAAS,CACRL,KAAMH,EACNI,QAAS2D,IAEVtD,aAAamM,QAAQ,QAAS7I,EAAKvB,WAGpCyB,SAAQ,kBAAMzD,EAASP,GAAgB,Q8Bbe4M,CAAMlJ,MAC3D,kBAAC,IAAKhC,KAAN,CAAWd,KAAK,WAAWqD,UAAQ,GAClC,kBAAC,IAAD,CAAOI,YAAY,WAAWwI,OAAQ,kBAACC,GAAA,EAAD,SAEvC,kBAAC,IAAKpL,KAAN,CAAWd,KAAK,WAAWqD,UAAQ,GAClC,kBAAC,IAAM8I,SAAP,CAAgB1I,YAAY,WAAWwI,OAAQ,kBAACG,GAAA,EAAD,SAEhD,kBAAC,IAAD,CAAQC,OAAK,EAAC/M,KAAK,UAAUgN,SAAS,SAAS9H,QAAS+D,GAAxD,UATF,cAaY,kBAAC,IAAD,CAAM9H,GAAG,aAAT,e,UCiBC8L,I,OAnCE,WAChB,IAAM5M,EAAWS,cACXoM,EAAUlM,cACRmM,EAAoBxM,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjDsM,gBACR,OACC,yBAAKlM,UAAU,oBACd,wCACA,kBAAC,IAAD,CACCoC,OAAO,WACPC,SAAU,SAACE,GAAD,OACTnD,E/BamB,SAACmD,EAAOpD,GAAR,OAAe,SAACC,GACvCA,EAASH,GAAiB,IAC1BsM,IAAM/I,KAAK7D,EAAM,UAAW4D,GAC1BE,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,SAC1Ca,GAAMxD,OAEf0D,SAAQ,kBAAMzD,EAASH,GAAiB,Q+BrB7BkN,CAAS5J,GAAO,kBAAM0J,EAAQnM,KAAK,gBAG7C,kBAAC,IAAKS,KAAN,CAAWd,KAAK,OAAOqD,UAAQ,EAACE,MAAO,CAAC,CAAEF,UAAU,KACnD,kBAAC,IAAD,CAAOI,YAAY,OAAOwI,OAAQ,kBAACU,GAAA,EAAD,SAEnC,kBAAC,IAAK7L,KAAN,CAAWd,KAAK,WAAWqD,UAAQ,EAACE,MAAO,CAAC,CAAEF,UAAU,KACvD,kBAAC,IAAD,CAAOI,YAAY,WAAWwI,OAAQ,kBAACC,GAAA,EAAD,SAEvC,kBAAC,IAAKpL,KAAN,CAAWd,KAAK,WAAWqD,UAAQ,EAACE,MAAO,CAAC,CAAEF,UAAU,KACvD,kBAAC,IAAM8I,SAAP,CAAgB1I,YAAY,WAAWwI,OAAQ,kBAACG,GAAA,EAAD,SAEhD,kBAAC,IAAD,CACCC,OAAK,EACL/M,KAAK,UACLgN,SAAS,SACT9H,QAASiI,GAJV,aAjBF,kBA0BgB,kBAAC,IAAD,CAAMhM,GAAG,UAAT,YCtCLmM,GAAqB,SAACvN,GAAD,MAAgB,CACjDC,KAAMgJ,GACN/I,QAASF,IAEGwN,GAAyB,SAACxN,GAAD,MAAgB,CACrDC,KAAMgJ,GACN/I,QAASF,IC8BKyN,GAhCQ,WACtB,IAAMnN,EAAWS,cACX2M,EAAO9M,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAC1C,OACC,kBAAC,IAAD,CACCI,UAAU,0BACVyM,cAAeD,EACfpK,OAAO,WACPC,SAAU,SAACE,GAAD,OAAWnD,EDeI,SAACmD,GAAD,OAAW,SAACnD,GACvCA,EAASkN,IAAuB,IAChC1L,EACEqJ,IAAI,iBAAkB1H,GACtBE,MAAK,SAACC,GAAS,IACPlB,EAAUkB,EAAIC,KAAdnB,MACJA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,UAElDA,IAAQsE,QAAQ,gCAChBsG,YAAW,WACVtN,EAASF,OACP,SAGJ2D,SAAQ,kBAAMzD,EAASkN,IAAuB,QC7BhBK,CAAapK,MAE3C,kBAAC,IAAKhC,KAAN,CACCwC,MAAM,eACNtD,KAAK,UACLqD,UAAQ,EACRE,MAAO,CAAC,CAAEF,UAAU,KAEpB,kBAAC,IAAM8I,SAAP,CAAgBF,OAAQ,kBAACG,GAAA,EAAD,SAEzB,kBAAC,IAAKtL,KAAN,CACCwC,MAAM,eACNtD,KAAK,UACLqD,UAAQ,EACRE,MAAO,CAAC,CAAEF,UAAU,KAEpB,kBAAC,IAAM8I,SAAP,CAAgBF,OAAQ,kBAACG,GAAA,EAAD,SAEzB,kBAAC,IAAD,CAAQC,OAAK,EAAC/M,KAAK,UAAUgN,SAAS,UAAtC,YCEYa,GA5BO,WACrB,IAAMxN,EAAWS,cACX2M,EAAO9M,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAC1C,OACC,kBAAC,IAAD,CACCI,UAAU,yBACVyM,cAAeD,EACfpK,OAAO,WACPC,SAAU,SAACE,GAAD,OAAWnD,EFHA,SAACmD,GAAD,OAAW,SAACnD,GACnCA,EAASiN,IAAmB,IAC5BzL,EACEqJ,IAAI,SAAU1H,GACdE,MAAK,SAACC,GAAS,IAAD,EACUA,EAAIC,KAApBA,EADM,EACNA,KAAMnB,EADA,EACAA,MACVA,EAAOM,IAAQN,MAAMA,EAAMoB,KAAO,KAAOpB,EAAMM,UAE9Ca,EAAKvB,OAAO/B,aAAamM,QAAQ,QAAS7I,EAAKvB,OACnDhC,EAAS,CACRL,KAAMgJ,GACN/I,QAAS2D,IAEVb,IAAQsE,QAAQ,mCAGjBvD,SAAQ,kBAAMzD,EAASiN,IAAmB,QEbZQ,CAAStK,MAEvC,kBAAC,IAAKhC,KAAN,CACCwC,MAAM,WACNtD,KAAK,WACLqD,UAAQ,EACRE,MAAO,CAAC,CAAEF,UAAU,KAEpB,kBAAC,IAAD,CAAOI,YAAY,WAAW4J,UAAQ,EAACpB,OAAQ,kBAACC,GAAA,EAAD,SAEhD,kBAAC,IAAKpL,KAAN,CAAWwC,MAAM,OAAOtD,KAAK,OAAOqD,UAAQ,EAACE,MAAO,CAAC,CAAEF,UAAU,KAChE,kBAAC,IAAD,CAAOI,YAAY,OAAOwI,OAAQ,kBAACU,GAAA,EAAD,SAEnC,kBAAC,IAAD,CAAQN,OAAK,EAAC/M,KAAK,UAAUgN,SAAS,UAAtC,YCRYgB,I,OAZC,WAEf,OADarN,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAC9BH,KACX,yBAAKO,UAAU,mBACd,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGD,kBAAC,IAAD,CAAUE,GAAG,aCeA8M,GAjBH,kBACX,kBAAC,IAAD,CAAUjE,MAAOA,IAChB,kBAAC,IAAD,CAAekE,SAAS,UACvB,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1F,KACjC,kBAAC,IAAD,CAAOyF,KAAK,aAAaC,UAAWC,KACpC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWL,KAClC,kBAAC,IAAD,CAAOI,KAAK,SAASC,UAAW/B,KAChC,kBAAC,IAAD,CAAO8B,KAAK,YAAYC,UAAWpB,KACnC,kBAAC,IAAD,CAAOoB,UAAWzF,U,oBCdH2F,QACW,cAA7BC,OAAOzH,SAAS0H,UAEe,UAA7BD,OAAOzH,SAAS0H,UAEhBD,OAAOzH,SAAS0H,SAASC,MACvB,2D,OCZNC,KAASC,OAAO,kBAAC,GAAD,MAAS9H,SAAS+H,eAAe,SD6H3C,kBAAmB3H,WACrBA,UAAU4H,cAAcC,MACrBrL,MAAK,SAAAsL,GACJA,EAAaC,gBAEdC,OAAM,SAAAzM,GACLlD,QAAQkD,MAAMA,EAAMM,c","file":"static/js/main.5bdc7f4e.chunk.js","sourcesContent":["console.log(process.env);\r\nrequire(\"dotenv\").config();\r\nexport const api = process.env.REACT_APP_API;\r\n","export const AUTH_ACTION_TYPES = {\r\n\tLOGIN: \"LOGIN\",\r\n\tSET_LOADING_LOGIN: \"SET_LOADING_LOGIN\",\r\n\tLOGOUT: \"LOGOUT\",\r\n\tSET_LOADING_SIGNUP: \"SET_LOADING_SIGNUP\",\r\n\tSET_LOADING_GET_USER: \"SET_LOADING_GET_USER\",\r\n\tGET_USER: \"GET_USER\",\r\n};\r\n","import { message } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { api } from \"config/api\";\r\nimport { AUTH_ACTION_TYPES } from \"constants/actionTypes/Auth\";\r\n\r\nexport const setLoadingLogin = (isLoading) => ({\r\n\ttype: AUTH_ACTION_TYPES.SET_LOADING_LOGIN,\r\n\tpayload: isLoading,\r\n});\r\nexport const setLoadingSignup = (isLoading) => ({\r\n\ttype: AUTH_ACTION_TYPES.SET_LOADING_SIGNUP,\r\n\tpayload: isLoading,\r\n});\r\nexport const setLoadingGetUser = (isLoading) => ({\r\n\ttype: AUTH_ACTION_TYPES.SET_LOADING_GET_USER,\r\n\tpayload: isLoading,\r\n});\r\n\r\nexport const login = (value) => (dispatch) => {\r\n\tdispatch(setLoadingLogin(true));\r\n\tAxios.post(api + \"/login\", value)\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AUTH_ACTION_TYPES.LOGIN,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem(\"token\", data.token);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingLogin(false)));\r\n};\r\n\r\nexport const registry = (value, cb) => (dispatch) => {\r\n\tdispatch(setLoadingSignup(true));\r\n\tAxios.post(api + \"/signup\", value)\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse if (data) cb();\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingSignup(false)));\r\n};\r\n\r\nexport const logout = (cb) => (dispatch) => {\r\n\tlocalStorage.removeItem(\"token\");\r\n\tdispatch({\r\n\t\ttype: AUTH_ACTION_TYPES.LOGOUT,\r\n\t});\r\n\tif (cb) cb();\r\n};\r\n","// libs\r\nimport React from \"react\";\r\nimport { Dropdown, Layout, Menu } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"actions/Auth\";\r\n\r\nconst AppLayout = ({ children }) => {\r\n\tconst { name } = useSelector((state) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\tconst { push } = useHistory();\r\n\r\n\treturn (\r\n\t\t<Layout className=\"app-layout-wrapper\">\r\n\t\t\t<Layout.Header className=\"app-header\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<h1 className=\"app-brand\">Fun Retro</h1>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Menu theme=\"dark\" mode=\"horizontal\">\r\n\t\t\t\t\t{name ? (\r\n\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\ttrigger=\"click\"\r\n\t\t\t\t\t\t\toverlay={\r\n\t\t\t\t\t\t\t\t<Menu>\r\n\t\t\t\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/profile\">Profile</Link>\r\n\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t\t<Menu.Item onClick={() => dispatch(logout(), push(\"/login\"))}>\r\n\t\t\t\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span style={{ cursor: \"pointer\" }}>{name}</span>\r\n\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Menu>\r\n\t\t\t</Layout.Header>\r\n\t\t\t<Layout.Content className=\"app-content\">{children}</Layout.Content>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default AppLayout;\r\n","import { message } from \"antd\";\r\nimport { api } from \"./api\";\r\nimport axios from \"axios\";\r\nconst fetcher = axios.create();\r\n\r\nfetcher.interceptors.request.use(\r\n\tasync (config) => {\r\n\t\tconst token = await localStorage.getItem(\"token\");\r\n\t\tconfig.headers = {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t};\r\n\t\tconfig.baseURL = api;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => Promise.reject(error)\r\n);\r\n\r\nfetcher.interceptors.response.use(\r\n\t(response) => new Promise((resolve) => resolve(response)),\r\n\t(error) => {\r\n\t\tif (!error.response)\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tmessage.error(\"Network Error.\");\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\tif (error.response.status === 403)\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tmessage.error(\"You don't have permission to access this page.\");\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\telse if (error.response.status === 401)\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tmessage.error(\"Not logged in\");\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\telse {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tmessage.error(\"Something went wrong.\");\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport default fetcher;\r\n","export const DASHBOARD_ACTION_TYPES = {\r\n\tTOGGLE_REALTIME: \"TOGGLE_REALTIME\",\r\n\tSET_LOADING_BOARD: \"SET_LOADING_BOARD\",\r\n\tGET_BOARD: \"GET_BOARD\",\r\n\tADD_BOARD: \"ADD_BOARD\",\r\n\tSET_LOADING_ADD_BOARD: \"SET_LOADING_ADD_BOARD\",\r\n};\r\n","import { message } from \"antd\";\r\nimport { api } from \"config/api\";\r\nimport fetcher from \"config/fetcher\";\r\nimport { DASHBOARD_ACTION_TYPES } from \"constants/actionTypes/Dashboard\";\r\n\r\nexport const setLoadingAddBoard = (isLoading) => ({\r\n\ttype: DASHBOARD_ACTION_TYPES.SET_LOADING_ADD_BOARD,\r\n\tpayload: isLoading,\r\n});\r\nexport const setLoadingGetBoard = (isLoading) => ({\r\n\ttype: DASHBOARD_ACTION_TYPES.SET_LOADING_BOARD,\r\n\tpayload: isLoading,\r\n});\r\n\r\nexport const addBoard = (value) => (dispatch) => {\r\n\tdispatch(setLoadingAddBoard(true));\r\n\tfetcher\r\n\t\t.post(api + \"/board\", value)\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: DASHBOARD_ACTION_TYPES.ADD_BOARD,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t});\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAddBoard(false)));\r\n};\r\n\r\nexport const getBoard = () => (dispatch) => {\r\n\tdispatch(setLoadingGetBoard(true));\r\n\tfetcher\r\n\t\t.get(api + \"/board\")\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse if (data)\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: DASHBOARD_ACTION_TYPES.GET_BOARD,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t});\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingGetBoard(false)));\r\n};\r\n\r\nexport const toggleRealtime = () => ({\r\n\ttype: DASHBOARD_ACTION_TYPES.TOGGLE_REALTIME,\r\n});\r\n","// libs\r\nimport React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addBoard } from \"actions/Dashboard\";\r\n\r\nconst AddBoardForm = ({ form }) => {\r\n\tconst dispatch = useDispatch();\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tclassName=\"add-board-form-wrapper\"\r\n\t\t\tform={form}\r\n\t\t\tlayout=\"vertical\"\r\n\t\t\tonFinish={(values) => dispatch(addBoard(values))}\r\n\t\t>\r\n\t\t\t<Form.Item required label=\"Name\" name=\"name\" rules={[{ required: true }]}>\r\n\t\t\t\t<Input size=\"large\" placeholder=\"Name\" />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item name=\"description\" label=\"Description\">\r\n\t\t\t\t<Input.TextArea size=\"large\" rows={5} />\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default AddBoardForm;\r\n","// libs\r\n\r\nimport { Button, Form, Modal } from \"antd\";\r\nimport AddBoardForm from \"pages/Dashboard/components/AddBoardForm\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { useSelector } from \"react-redux\";\r\n// components\r\n// others\r\n\r\nconst AddBoardModal = ({ visible, hide }) => {\r\n\tconst [form] = Form.useForm();\r\n\tconst { isLoadingAdd } = useSelector((state) => state.dashboard);\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tclassName=\"add-board-modal-wrapper\"\r\n\t\t\tonClose={hide}\r\n\t\t\tvisible={visible}\r\n\t\t\tonCancel={hide}\r\n\t\t\ttitle=\"Add New Board\"\r\n\t\t\tfooter={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button onClick={hide}>Cancel</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tform.submit();\r\n\t\t\t\t\t\t\thide();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tloading={isLoadingAdd}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<AddBoardForm form={form} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\nexport default AddBoardModal;\r\n","// libs\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\nimport AddBoardModal from \"pages/Dashboard/components/AddBoardModal\";\r\n\r\nconst AddNewBoard = () => {\r\n\tconst [visible, setVisible] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => setVisible(true)}\r\n\t\t\t\tclassName=\"add-new-board-wrapper\"\r\n\t\t\t\ttype=\"ghost\"\r\n\t\t\t>\r\n\t\t\t\t<PlusCircleFilled />\r\n\t\t\t\tAdd board\r\n\t\t\t</Button>\r\n\t\t\t<AddBoardModal visible={visible} hide={() => setVisible(false)} />\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AddNewBoard;\r\n","// Libs\r\nimport { Progress, Tag, Tooltip } from \"antd\";\r\nimport React from \"react\";\r\n// Components\r\n// Data Sources, Mocks\r\n// Others\r\nimport \"./style.scss\";\r\n\r\nconst BoardColumn = ({ col1, col2, col3, total }) => (\r\n\t<div className=\"board-column-wrapper\">\r\n\t\t<div className=\"tag-wrapper\">\r\n\t\t\t<Tag color=\"#87d068\">Went Well</Tag>\r\n\t\t\t<Tooltip title={col1}>\r\n\t\t\t\t<Progress\r\n\t\t\t\t\tpercent={(col1 / total) * 100}\r\n\t\t\t\t\tstrokeColor=\"#87d068\"\r\n\t\t\t\t\tshowInfo={false}\r\n\t\t\t\t/>\r\n\t\t\t</Tooltip>\r\n\t\t</div>\r\n\t\t<div className=\"tag-wrapper\">\r\n\t\t\t<Tag color=\"#108ee9\">To Improve</Tag>\r\n\t\t\t<Tooltip title={col2}>\r\n\t\t\t\t<Progress\r\n\t\t\t\t\tpercent={(col2 / total) * 100}\r\n\t\t\t\t\tstrokeColor=\"#108ee9\"\r\n\t\t\t\t\tshowInfo={false}\r\n\t\t\t\t/>\r\n\t\t\t</Tooltip>\r\n\t\t</div>\r\n\t\t<div className=\"tag-wrapper\">\r\n\t\t\t<Tag color=\"#f50\">Action Items</Tag>\r\n\t\t\t<Tooltip title={col3}>\r\n\t\t\t\t<Progress\r\n\t\t\t\t\tpercent={(col3 / total) * 100}\r\n\t\t\t\t\tstrokeColor=\"#f50\"\r\n\t\t\t\t\tshowInfo={false}\r\n\t\t\t\t/>\r\n\t\t\t</Tooltip>\r\n\t\t</div>\r\n\t</div>\r\n);\r\nexport default BoardColumn;\r\n","// libs\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n// components\r\n// others\r\n\r\nconst BoardItemInfo = ({ item }) => (\r\n\t<div className=\"board-item-info-wrapper\">\r\n\t\t<p>Created By: {item.createdBy}</p>\r\n\t\t<p>\r\n\t\t\tLast Update: {item.updatedBy} -{\" \"}\r\n\t\t\t{moment(new Date(item.updatedAt)).fromNow()}\r\n\t\t</p>\r\n\t</div>\r\n);\r\nexport default BoardItemInfo;\r\n","// libs\r\nimport React from \"react\";\r\nimport { Card, message, Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n\tEllipsisOutlined,\r\n\tClockCircleOutlined,\r\n\tShareAltOutlined,\r\n} from \"@ant-design/icons\";\r\n// components\r\nimport BoardColumn from \"../BoardColumn\";\r\n// others\r\nimport \"./style.scss\";\r\nimport BoardItemInfo from \"pages/Dashboard/components/BoardItemInfo\";\r\n\r\nconst BoardItem = ({ board }) => (\r\n\t<Card\r\n\t\tsize=\"small\"\r\n\t\tclassName=\"board-item-wrapper\"\r\n\t\tactions={[\r\n\t\t\t<Tooltip key=\"share\" title=\"Share URL\">\r\n\t\t\t\t<ShareAltOutlined\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst url = document.location.href + \"board/\" + board.id;\r\n\t\t\t\t\t\tnavigator.clipboard.writeText(url);\r\n\t\t\t\t\t\tmessage.success(\"URL copied\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Tooltip>,\r\n\t\t\t<Tooltip\r\n\t\t\t\tkey=\"info\"\r\n\t\t\t\ttitle={<BoardItemInfo item={board} />}\r\n\t\t\t\tplacement=\"bottom\"\r\n\t\t\t>\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</Tooltip>,\r\n\t\t]}\r\n\t\ttitle={<Link to={`/board/${board.id}`}>{board.name}</Link>}\r\n\t\textra={\r\n\t\t\t<>\r\n\t\t\t\t<ClockCircleOutlined /> {moment(new Date(board.createdAt)).fromNow()}\r\n\t\t\t</>\r\n\t\t}\r\n\t>\r\n\t\t<Card.Meta description={board.description} />\r\n\t\t<BoardColumn {...{ ...board.items }} />\r\n\t</Card>\r\n);\r\n\r\nexport default BoardItem;\r\n","import React from \"react\";\r\nimport { Col, Row, Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst withLoading = (isLoading, key) => (Component) =>\r\n\tisLoading ? (\r\n\t\t<Row\r\n\t\t\talign=\"middle\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\tstyle={{ height: \"100%\" }}\r\n\t\t\tclassName=\"spinner-wrapper\"\r\n\t\t>\r\n\t\t\t<Col>\r\n\t\t\t\t<Spin key={key} size=\"large\" indicator={<LoadingOutlined />} />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t) : (\r\n\t\tComponent\r\n\t);\r\n\r\nexport default withLoading;\r\n","// Libs\r\nimport React, { useEffect } from \"react\";\r\n// Components\r\nimport AddNewBoard from \"pages/Dashboard/components/AddNewBoard\";\r\nimport BoardItem from \"pages/Dashboard/components/BoardItem\";\r\n// Data Sources, Mocks\r\n// Others\r\nimport \"./style.scss\";\r\n// import useFirestore from \"hooks/useFirestore\";\r\nimport withLoading from \"hocs/withLoading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBoard } from \"actions/Dashboard\";\r\n\r\nconst BoardList = () => {\r\n\t// const { collectionData } = useFirestore(\"board\");\r\n\t// const data = (collectionData || []).map((doc) => ({\r\n\t// \tid: doc.id,\r\n\t// \t...doc.data(),\r\n\t// }));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst { isLoadingGet, data } = useSelector((state) => state.dashboard);\r\n\tuseEffect(() => dispatch(getBoard()), [dispatch]);\r\n\treturn withLoading(isLoadingGet)(\r\n\t\t<div className=\"board-list-wrapper\">\r\n\t\t\t<AddNewBoard />\r\n\t\t\t{data.map((item) => (\r\n\t\t\t\t<BoardItem key={item.id} board={item} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default BoardList;\r\n","// libs\r\nimport React from \"react\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst DashboardHeading = () => (\r\n\t<div className=\"dashboard-heading-wrapper\">\r\n\t\t<div className=\"title\">\r\n\t\t\t<h1>My boards</h1>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default DashboardHeading;\r\n","// libs\r\nimport BoardList from \"pages/Dashboard/mains/BoardList\";\r\nimport DashboardHeading from \"pages/Dashboard/mains/DashboardHeading\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// components\r\n// others\r\n\r\nconst Dashboard = () => {\r\n\tconst { name } = useSelector((state) => state.auth);\r\n\treturn name ? (\r\n\t\t<div className=\"dashboard-wrapper\">\r\n\t\t\t<DashboardHeading />\r\n\t\t\t<BoardList />\r\n\t\t</div>\r\n\t) : (\r\n\t\t<Redirect to=\"/login\" />\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","// libs\r\nimport React from \"react\";\r\nimport { Result, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n// components\r\n// others\r\n\r\nconst Page404 = () => (\r\n\t<Result\r\n\t\tstatus=\"404\"\r\n\t\ttitle=\"404\"\r\n\t\tsubTitle=\"Sorry, the page you visited does not exist.\"\r\n\t\textra={\r\n\t\t\t<Link to=\"/\">\r\n\t\t\t\t<Button type=\"primary\">Back Home</Button>\r\n\t\t\t</Link>\r\n\t\t}\r\n\t/>\r\n);\r\nexport default Page404;\r\n","import { DASHBOARD_ACTION_TYPES } from \"constants/actionTypes/Dashboard\";\r\nconst initialState = {\r\n\tdata: [],\r\n\tisLoadingGet: false,\r\n\tisLoadingAdd: false,\r\n\trealtime: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase DASHBOARD_ACTION_TYPES.SET_LOADING_ADD_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoadingAdd: action.payload,\r\n\t\t\t};\r\n\t\tcase DASHBOARD_ACTION_TYPES.SET_LOADING_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoadingGet: action.payload,\r\n\t\t\t};\r\n\t\tcase DASHBOARD_ACTION_TYPES.TOGGLE_REALTIME:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trealtime: !state.realtime,\r\n\t\t\t};\r\n\t\tcase DASHBOARD_ACTION_TYPES.GET_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tcase DASHBOARD_ACTION_TYPES.ADD_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: [action.payload, ...state.data],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const PROFILE_ACTION_TYPES = {\r\n\tSET_LOADING_UPDATE_PROFILE: \"SET_LOADING_UPDATE_PROFILE\",\r\n\tUPDATE_PROFILE: \"UPDATE_PROFILE\",\r\n\tSET_LOADING_UPDATE_PASSWORD: \"SET_LOADING_UPDATE_PASSWORD\",\r\n\tUPDATE_PASSWORD: \"UPDATE_PASSWORD\",\r\n};\r\n","import { AUTH_ACTION_TYPES } from \"constants/actionTypes/Auth\";\r\nimport { PROFILE_ACTION_TYPES } from \"constants/actionTypes/Profile\";\r\nimport jwt from \"jwt-decode\";\r\nconst getUser = () => {\r\n\tconst token = localStorage.getItem(\"token\");\r\n\tif (token) {\r\n\t\ttry {\r\n\t\t\tconst { password, ...user } = jwt(token);\r\n\t\t\treturn user;\r\n\t\t} catch {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t} else return undefined;\r\n};\r\nconst initialState = {\r\n\tisLoadingLogin: false,\r\n\tisLoadingGetUser: true,\r\n\t...getUser(),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_ACTION_TYPES.SET_LOADING_LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoadingLogin: action.payload,\r\n\t\t\t};\r\n\t\tcase AUTH_ACTION_TYPES.LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\t\tcase AUTH_ACTION_TYPES.LOGOUT:\r\n\t\t\treturn {};\r\n\t\tcase AUTH_ACTION_TYPES.GET_USER:\r\n\t\t\treturn {\r\n\t\t\t\tisLoadingGetUser: false,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\t\tcase AUTH_ACTION_TYPES.SET_LOADING_GET_USER:\r\n\t\t\treturn {\r\n\t\t\t\tisLoadingGetUser: action.payload,\r\n\t\t\t\t...state,\r\n\t\t\t};\r\n\t\tcase PROFILE_ACTION_TYPES.UPDATE_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const BOARD_DETAIL_ACTION_TYPES = {\r\n\tSET_LOADING_GET_DETAIL: \"SET_LOADING_GET_DETAIL\",\r\n\tGET_DETAIL: \"GET_DETAIL\",\r\n\tSET_LOADING_ADD_ITEM: \"SET_LOADING_ADD_ITEM\",\r\n\tADD_ITEM: \"ADD_ITEM\",\r\n\tEDIT_ITEM: \"EDIT_ITEM\",\r\n\tEDIT_BOARD: \"EDIT_BOARD\",\r\n};\r\n","import { BOARD_DETAIL_ACTION_TYPES } from \"constants/actionTypes/BoardDetail\";\r\nconst initialState = {\r\n\tdata: {\r\n\t\titems: {\r\n\t\t\t1: [],\r\n\t\t\t2: [],\r\n\t\t\t3: [],\r\n\t\t},\r\n\t},\r\n\tisLoading: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase BOARD_DETAIL_ACTION_TYPES.SET_LOADING_GET_DETAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: action.payload,\r\n\t\t\t};\r\n\t\tcase BOARD_DETAIL_ACTION_TYPES.GET_DETAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tcase BOARD_DETAIL_ACTION_TYPES.ADD_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t...state.data,\r\n\t\t\t\t\titems: {\r\n\t\t\t\t\t\t...state.data.items,\r\n\t\t\t\t\t\t[action.payload.column]: [\r\n\t\t\t\t\t\t\t...state.data.items[action.payload.column],\r\n\t\t\t\t\t\t\taction.payload,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase BOARD_DETAIL_ACTION_TYPES.EDIT_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t...state.data,\r\n\t\t\t\t\titems: {\r\n\t\t\t\t\t\t...state.data.items,\r\n\t\t\t\t\t\t[action.payload.column]: state.data.items[\r\n\t\t\t\t\t\t\taction.payload.column\r\n\t\t\t\t\t\t].map((item) =>\r\n\t\t\t\t\t\t\titem.id === action.payload.id ? action.payload : item\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase BOARD_DETAIL_ACTION_TYPES.EDIT_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t...state.data,\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport Dashboard from \"reducers/Dashboard\";\r\nimport Auth from \"reducers/Auth\";\r\nimport BoardDetail from \"reducers/BoardDetail\";\r\n\r\nexport default combineReducers({\r\n\tdashboard: Dashboard,\r\n\tdetail: BoardDetail,\r\n\tauth: Auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import { message } from \"antd\";\r\nimport fetcher from \"config/fetcher\";\r\nimport { BOARD_DETAIL_ACTION_TYPES } from \"constants/actionTypes/BoardDetail\";\r\n\r\nexport const setLoadingGetDetail = (isLoading) => ({\r\n\ttype: BOARD_DETAIL_ACTION_TYPES.SET_LOADING_GET_DETAIL,\r\n\tpayload: isLoading,\r\n});\r\nexport const setLoadingAddItem = (isLoading) => ({\r\n\ttype: BOARD_DETAIL_ACTION_TYPES.SET_LOADING_ADD_ITEM,\r\n\tpayload: isLoading,\r\n});\r\n\r\nexport const getDetail = (id) => (dispatch) => {\r\n\tdispatch(setLoadingGetDetail(true));\r\n\tfetcher\r\n\t\t.get(\"/board/\" + id)\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: BOARD_DETAIL_ACTION_TYPES.GET_DETAIL,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t});\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingGetDetail(false)));\r\n};\r\n\r\nexport const addItem = (boardId, column, name, cb) => (dispatch) => {\r\n\tdispatch(setLoadingAddItem(true));\r\n\tfetcher\r\n\t\t.post(\"/item\", { boardId, column, name })\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: BOARD_DETAIL_ACTION_TYPES.ADD_ITEM,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t});\r\n\t\t\tcb();\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingAddItem(false)));\r\n};\r\n\r\nexport const editItem = (itemId, name, cb) => (dispatch) => {\r\n\tfetcher.put(\"/item/\" + itemId, { name }).then((res) => {\r\n\t\tconst { data, error } = res.data;\r\n\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\telse\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: BOARD_DETAIL_ACTION_TYPES.EDIT_ITEM,\r\n\t\t\t\tpayload: data,\r\n\t\t\t});\r\n\t\tcb();\r\n\t});\r\n};\r\n\r\nexport const editBoard = (boardId, name) => (dispatch) => {\r\n\tfetcher.put(\"/board/\" + boardId, { name }).then((res) => {\r\n\t\tconst { data, error } = res.data;\r\n\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\telse\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: BOARD_DETAIL_ACTION_TYPES.EDIT_BOARD,\r\n\t\t\t\tpayload: data,\r\n\t\t\t});\r\n\t});\r\n};\r\n","export default {\r\n\tWENT_WELL: 1,\r\n\tTO_IMPROVE: 2,\r\n\tACTION_ITEMS: 3,\r\n\t1: \"Went Well\",\r\n\t2: \"To Imporve\",\r\n\t3: \"Action Items\",\r\n};\r\n","// libs\r\nimport { editItem } from \"actions/BoardDetail\";\r\nimport { Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst bgColor = (type) => (type === 1 ? \"green\" : type === 2 ? \"red\" : \"blue\");\r\nconst Item = ({ item }) => {\r\n\tconst [isEdit, setIsEdit] = useState(false);\r\n\tconst [name, setName] = useState(item.name);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn isEdit ? (\r\n\t\t<Input.TextArea\r\n\t\t\tvalue={name}\r\n\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\tonBlur={() =>\r\n\t\t\t\tname !== item.name &&\r\n\t\t\t\tdispatch(editItem(item.id, name, () => setIsEdit(false)))\r\n\t\t\t}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div\r\n\t\t\tclassName=\"item-wrapper\"\r\n\t\t\tstyle={{ backgroundColor: bgColor(item.column) }}\r\n\t\t\tonDoubleClick={() => setIsEdit(true)}\r\n\t\t>\r\n\t\t\t{item.name}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Item;\r\n","// libs\r\nimport ColumnTypes from \"constants/dataTypes/ColumnTypes\";\r\nimport { Button, Input } from \"antd\";\r\nimport Item from \"pages/BoardDetail/components/Item\";\r\nimport React, { useState } from \"react\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"actions/BoardDetail\";\r\n\r\nconst BoardSingleColumn = ({ type, items, boardId }) => {\r\n\tconst [isEdit, setIsEdit] = useState(false);\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\tconst hideEdit = () => {\r\n\t\tsetIsEdit(false);\r\n\t\tsetName(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"board-single-column-wrapper\">\r\n\t\t\t<h2 className=\"title\">{ColumnTypes[type]}</h2>\r\n\t\t\t{isEdit ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Input.TextArea\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"btn-save\"\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\tonClick={() => dispatch(addItem(boardId, type, name, hideEdit))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"btn-cancel\"\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\tdanger\r\n\t\t\t\t\t\tonClick={hideEdit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Button className=\"btn-add\" onClick={() => setIsEdit(true)}>\r\n\t\t\t\t\tAdd Item\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t\t{items.map((item) => (\r\n\t\t\t\t<Item item={item} key={item.id} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default BoardSingleColumn;\r\n","// libs\r\nimport ColumnTypes from \"constants/dataTypes/ColumnTypes\";\r\nimport BoardSingleColumn from \"pages/BoardDetail/components/BoardSingleColumns\";\r\nimport React from \"react\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst BoardColumns = ({ items, boardId }) => (\r\n\t<div className=\"board-columns-wrapper\">\r\n\t\t{Object.values(ColumnTypes).map(\r\n\t\t\t(index) =>\r\n\t\t\t\t!isNaN(index) && (\r\n\t\t\t\t\t<BoardSingleColumn\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\ttype={index}\r\n\t\t\t\t\t\titems={items[index]}\r\n\t\t\t\t\t\tboardId={boardId}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t)}\r\n\t</div>\r\n);\r\nexport default BoardColumns;\r\n","// libs\r\nimport { editBoard } from \"actions/BoardDetail\";\r\nimport { Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// components\r\n// others\r\n\r\nconst BoardName = ({ name = \"\", boardId }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [isEdit, setIsEdit] = useState(false);\r\n\tconst [value, setValue] = useState(name);\r\n\treturn (\r\n\t\t<div className=\"board-name-wrapper\">\r\n\t\t\t{isEdit ? (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => setValue(e.target.value)}\r\n\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\tdispatch(editBoard(boardId, value));\r\n\t\t\t\t\t\tsetIsEdit(false);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<h2 onDoubleClick={() => setIsEdit(true)}>{name}</h2>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default BoardName;\r\n","// libs\r\nimport { getDetail } from \"actions/BoardDetail\";\r\nimport withLoading from \"hocs/withLoading\";\r\nimport BoardColumns from \"pages/BoardDetail/mains/BoardColumns\";\r\nimport BoardName from \"pages/BoardDetail/mains/BoardName\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n// components\r\n// others\r\n\r\nconst BoardDetail = () => {\r\n\tconst { id } = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => dispatch(getDetail(id)), [dispatch, id]);\r\n\tconst { isLoading, data } = useSelector((state) => state.detail);\r\n\tconst { name } = useSelector((state) => state.auth);\r\n\treturn name ? (\r\n\t\twithLoading(isLoading)(\r\n\t\t\t<div className=\"board-detail-wrapper\">\r\n\t\t\t\t<BoardName name={data.name} boardId={data.id} />\r\n\t\t\t\t<BoardColumns items={data?.items} boardId={data.id} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t) : (\r\n\t\t<Redirect to=\"/login\" />\r\n\t);\r\n};\r\n\r\nexport default BoardDetail;\r\n","// libs\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"actions/Auth\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst Login = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { isLoadingLogin, username } = useSelector((state) => state.auth);\r\n\treturn username ? (\r\n\t\t<Redirect to=\"/\" />\r\n\t) : (\r\n\t\t<div className=\"login-wrapper\">\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<Form layout=\"vertical\" onFinish={(value) => dispatch(login(value))}>\r\n\t\t\t\t<Form.Item name=\"username\" required>\r\n\t\t\t\t\t<Input placeholder=\"Username\" prefix={<UserOutlined />} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name=\"password\" required>\r\n\t\t\t\t\t<Input.Password placeholder=\"Password\" prefix={<LockOutlined />} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Button block type=\"primary\" htmlType=\"submit\" loading={isLoadingLogin}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\tNew User ? <Link to=\"/registry\">Registry</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Login;\r\n","// Libs\r\nimport { LockOutlined, SmileOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { registry } from \"actions/Auth\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// Components\r\n// Data Sources, Mocks\r\n// Others\r\nimport \"./style.scss\";\r\n\r\nconst Registry = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst { isLoadingSignup } = useSelector((state) => state.auth);\r\n\treturn (\r\n\t\t<div className=\"registry-wrapper\">\r\n\t\t\t<h1>Registry</h1>\r\n\t\t\t<Form\r\n\t\t\t\tlayout=\"vertical\"\r\n\t\t\t\tonFinish={(value) =>\r\n\t\t\t\t\tdispatch(registry(value, () => history.push(\"/login\")))\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item name=\"name\" required rules={[{ required: true }]}>\r\n\t\t\t\t\t<Input placeholder=\"Name\" prefix={<SmileOutlined />} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name=\"username\" required rules={[{ required: true }]}>\r\n\t\t\t\t\t<Input placeholder=\"Username\" prefix={<UserOutlined />} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name=\"password\" required rules={[{ required: true }]}>\r\n\t\t\t\t\t<Input.Password placeholder=\"Password\" prefix={<LockOutlined />} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tblock\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\thtmlType=\"submit\"\r\n\t\t\t\t\tloading={isLoadingSignup}\r\n\t\t\t\t>\r\n\t\t\t\t\tRegistry\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\tHave account ? <Link to=\"/login\">Login</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Registry;\r\n","import { logout } from \"actions/Auth\";\r\nimport { message } from \"antd\";\r\nimport fetcher from \"config/fetcher\";\r\nimport { PROFILE_ACTION_TYPES } from \"constants/actionTypes/Profile\";\r\n\r\nexport const setLoadingEditUser = (isLoading) => ({\r\n\ttype: PROFILE_ACTION_TYPES.SET_LOADING_UPDATE_PROFILE,\r\n\tpayload: isLoading,\r\n});\r\nexport const setLoadingEditPassword = (isLoading) => ({\r\n\ttype: PROFILE_ACTION_TYPES.SET_LOADING_UPDATE_PASSWORD,\r\n\tpayload: isLoading,\r\n});\r\n\r\nexport const editUser = (value) => (dispatch) => {\r\n\tdispatch(setLoadingEditUser(true));\r\n\tfetcher\r\n\t\t.put(\"/user/\", value)\r\n\t\t.then((res) => {\r\n\t\t\tconst { data, error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse {\r\n\t\t\t\tif (data.token) localStorage.setItem(\"token\", data.token);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: PROFILE_ACTION_TYPES.UPDATE_PROFILE,\r\n\t\t\t\t\tpayload: data,\r\n\t\t\t\t});\r\n\t\t\t\tmessage.success(\"Update profile successfully\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingEditUser(false)));\r\n};\r\nexport const editPassword = (value) => (dispatch) => {\r\n\tdispatch(setLoadingEditPassword(true));\r\n\tfetcher\r\n\t\t.put(\"/user/password\", value)\r\n\t\t.then((res) => {\r\n\t\t\tconst { error } = res.data;\r\n\t\t\tif (error) message.error(error.code + \": \" + error.message);\r\n\t\t\telse {\r\n\t\t\t\tmessage.success(\"Update password successfully\");\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdispatch(logout());\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.finally(() => dispatch(setLoadingEditPassword(false)));\r\n};\r\n","// libs\r\nimport React from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { LockOutlined } from \"@ant-design/icons\";\r\nimport { editPassword } from \"actions/Profile\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// components\r\n// others\r\n\r\nconst UpdatePassword = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector((state) => state.auth);\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tclassName=\"update-password-wrapper\"\r\n\t\t\tinitialValues={user}\r\n\t\t\tlayout=\"vertical\"\r\n\t\t\tonFinish={(value) => dispatch(editPassword(value))}\r\n\t\t>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Old Password\"\r\n\t\t\t\tname=\"oldPass\"\r\n\t\t\t\trequired\r\n\t\t\t\trules={[{ required: true }]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password prefix={<LockOutlined />} />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"New Password\"\r\n\t\t\t\tname=\"newPass\"\r\n\t\t\t\trequired\r\n\t\t\t\trules={[{ required: true }]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password prefix={<LockOutlined />} />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Button block type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\tUpdate\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default UpdatePassword;\r\n","// libs\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { SmileOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport { editUser } from \"actions/Profile\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// components\r\n// others\r\n\r\nconst UpdateProfile = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector((state) => state.auth);\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tclassName=\"update-profile-wrapper\"\r\n\t\t\tinitialValues={user}\r\n\t\t\tlayout=\"vertical\"\r\n\t\t\tonFinish={(value) => dispatch(editUser(value))}\r\n\t\t>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"Username\"\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\trequired\r\n\t\t\t\trules={[{ required: true }]}\r\n\t\t\t>\r\n\t\t\t\t<Input placeholder=\"Username\" disabled prefix={<UserOutlined />} />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item label=\"Name\" name=\"name\" required rules={[{ required: true }]}>\r\n\t\t\t\t<Input placeholder=\"Name\" prefix={<SmileOutlined />} />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Button block type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\tUpdate\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default UpdateProfile;\r\n","// libs\r\nimport UpdatePassword from \"pages/Profile/mains/UpdatePassword\";\r\nimport UpdateProfile from \"pages/Profile/mains/UpdateProfile\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// components\r\n// others\r\nimport \"./style.scss\";\r\n\r\nconst Profile = () => {\r\n\tconst user = useSelector((state) => state.auth);\r\n\treturn user.name ? (\r\n\t\t<div className=\"profile-wrapper\">\r\n\t\t\t<UpdateProfile />\r\n\t\t\t<UpdatePassword />\r\n\t\t</div>\r\n\t) : (\r\n\t\t<Redirect to=\"/login\" />\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","// libs\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n// components\r\nimport AppLayout from \"components/AppLayout\";\r\n// pages\r\nimport Dashboard from \"pages/Dashboard\";\r\nimport Page404 from \"pages/Page404\";\r\n// others\r\nimport store from \"./store\";\r\nimport RetroDetail from \"./pages/BoardDetail/index\";\r\nimport Login from \"pages/Login\";\r\nimport Registry from \"pages/Registry\";\r\nimport Profile from \"pages/Profile\";\r\n\r\nconst App = () => (\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter basename=\"/retro\">\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={Dashboard} />\r\n\t\t\t\t\t<Route path=\"/board/:id\" component={RetroDetail} />\r\n\t\t\t\t\t<Route path=\"/profile\" component={Profile} />\r\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t<Route path=\"/registry\" component={Registry} />\r\n\t\t\t\t\t<Route component={Page404} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</AppLayout>\r\n\t\t</BrowserRouter>\r\n\t</Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import App from \"App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}